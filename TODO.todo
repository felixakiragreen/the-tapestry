TODAY:
  [x] call lines by number
  [x] call lines by weaver
  [ ] limit author to one line per chapter
    add require to weaving
    that checks if the currentLine
    get lines by weaver
    check if the currentLine is in the same chapter as any lines by the weaver
    DO MATH
  [x] function takes `uint` lineNumber returns `address` weaver
  [x] function takes `address` weaver returns `uint[]` lines (linesByWeaver)

TO LEARN:
  [x] parameter overload
    [x] by line
    [x] by line & chapter

QUESTIONS:
  [ ] ARE the number of mints per chapter limited?
  [ ] Call by lines (shows weaver)
  [ ] Call by weaver (shows number) do these not call the lines?
  [ ] Should chapter & stanza also start at 1 like lines?
  [ ] Can a weaver add both lines 16 & 17 (because they technically in separate chapters)
  [ ] Would it be better to enforce a number of lines BETWEEN what a weaver can weave? (Or both?)

CHAPTER:
  [ ] minting
    [ ] FIRST only weaver can mint
    [ ] THEN anyone can  
  [ ] titling


HOMEWORK:
  [x] Do the readStanza function
  [x] Tests with expects for both chapter and stanzas
  [x] add the expect for the readChapter
  [x] clean up readChapter2 / readChapter
  [x] Follow up in Discord with KZA about our questions
  [ ] write tests:
    [x] `weaverByLine`
    [x] `addressLines`
  [ ] implement "consecutive lines limit"

  hypotheticals
    1. weaver can weave only one line per chapter
      a. get current chapter (use currentLine) (consider making an internal function `getChapterForLine(uint lineNumber) return uint`)
      b. get addressLines for weaver (msg.sender)
      c. IF it's not empty... loop through addressLines and `getChapterForLine`
      d. IF any of them are the same as the current chapter, revert
      aka. require that none of them are the same as the current chapter

    2. weaver can only weave once every X lines
      a. get addressLines for weaver (msg.sender)
      b. IF it's not empty... loop through addressLines
      c. require that the currentLine is not X away from any of them


  FELIX:
    [ ] figure out why "weaving" in previous describes isn't accessible
    [ ] hypothetical simple contract for Kurt

NFT ART + METADATA:
  [ ]

LAST WEEK:
  [x] update the lines per address constraints
  [x] add getting chapters
  [x] add getting stanzas
  [x] replace `balanceOf` with new system

TO DO:
  [x] set up repo
  [x] copy + pasting all the basics
    package.json, directories, tests, etc.

KURT:
  [x] Minimum character length
  [x] Limiting number of lines per address

OTHER:
  [ ] ownable, multisig
  [ ] adding chapter titles